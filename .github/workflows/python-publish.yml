name: Build and upload Wheel to PyPI

on:
  release:
    types: [published]
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build_wheels:
    name: ${{ matrix.os }} - ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]  # Full set of Python versions
    steps:
      - uses: actions/checkout@v4

      # Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}  # Set Python version from matrix

      # Conditionally skip macOS for Python versions < 3.11
      - name: Skip macOS for Python < 3.11
        if: runner.os == 'macos-latest' && (matrix.python-version == '3.8' || matrix.python-version == '3.9' || matrix.python-version == '3.10')
        run: |
          echo "Skipping macOS for Python ${matrix.python-version}, as it is less than 3.11."

      # Install build tools
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # Build the wheel
      - name: Build pure Python wheel
        run: |
          python setup.py bdist_wheel --dist-dir=wheelhouse
          ls -l wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    name: Upload to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
